{"version":3,"sources":["webpack:///./src/components/staticPage.tsx","webpack:///./src/components/workCard.tsx","webpack:///./src/components/works.tsx","webpack:///./src/pages/projects.tsx"],"names":["StyledPage","styled","div","props","theme","mobileSize","Container","Body","Page","className","title","children","Card","WorkCard","Img","slug","image","React","useState","showInfo","setShowInfo","transitions","useTransition","from","opacity","enter","leave","fade","to","onMouseEnter","onMouseLeave","fluid","childImageSharp","style","maxHeight","map","item","key","Grid","Works","allWorks","useStaticQuery","allWorksJson","edges","w","node","images","ProjectsPage"],"mappings":"4FAAA,qCAKMA,EAAaC,IAAOC,IAAV,yEAAGD,CAAH,uOAGuB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,cASnB,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,cASxDC,EAAYL,IAAOC,IAAV,wEAAGD,CAAH,+IAGwB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,cAYtDE,EAAON,IAAOC,IAAV,mEAAGD,CAAH,8JA4BKO,IAXF,SAAAL,GACX,OACE,kBAACH,EAAD,KACE,kBAACM,EAAD,KACE,wBAAIG,UAAU,SAASN,EAAMO,OAC7B,kBAACH,EAAD,KAAOJ,EAAMQ,c,oLCjDfC,EAAOX,IAAOC,IAAV,qEAAGD,CAAH,iMA2DKY,GAvCDZ,YAAOa,KAAV,sEAAGb,CAAH,6DAMM,SAACE,GAAyB,IACjCO,EAAuBP,EAAvBO,MAAOK,EAAgBZ,EAAhBY,KAAMC,EAAUb,EAAVa,MADoB,EAETC,IAAMC,UAAS,GAAxCC,EAFkC,KAExBC,EAFwB,KAGnCC,EAAcC,YAAcH,EAAU,KAAM,CAChDI,KAAM,CAAEC,QAAS,GACjBC,MAAO,CAAED,QAAS,GAClBE,MAAO,CAAEF,QAAS,KAEpB,OACE,kBAACZ,EAAD,KACE,kBAAC,IAAD,CACEe,MAAI,EACJC,GAAE,aAAeb,EACjBc,aAAc,kBAAMT,GAAY,IAChCU,aAAc,kBAAMV,GAAY,KAEhC,kBAAC,IAAD,CACEW,MAAOf,EAAMgB,gBAAgBD,MAC7BE,MAAO,CAAEC,UAAW,WAErBb,EAAYc,KACX,gBAAGC,EAAH,EAAGA,KAAMjC,EAAT,EAASA,MAAOkC,EAAhB,EAAgBA,IAAhB,OACED,GACE,kBAAC,IAAElC,IAAH,CAAOmC,IAAKA,EAAKJ,MAAO9B,GACtB,2BAAIO,WCzDd4B,EAAOrC,IAAOC,IAAV,iEAAGD,CAAH,wbAiB6B,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,cA0C7CkC,EArCD,WACZ,IAoBMC,EApBOC,yBAAe,cAoBNC,aAAaC,MAEnC,OACE,kBAACL,EAAD,KACGE,EAASL,KAAI,SAACS,GAAD,OACZ,kBAAC,EAAD,CACElC,MAAOkC,EAAEC,KAAKnC,MACdM,MAAO4B,EAAEC,KAAKC,OAAO,GACrB/B,KAAM6B,EAAEC,KAAK9B,KACbsB,IAAKO,EAAEC,KAAKnC,aCpDAT,IAAOC,IAAV,8EAAGD,CAAH,mBAeJ8C,UAXM,WACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKrC,MAAM,aACX,kBAAC,IAAD,CAAYA,MAAM,YAChB,kBAAC,EAAD","file":"component---src-pages-projects-tsx-0a0422eff202d44efa08.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\n// this is a page wrapper for non-index static pages\n\nconst StyledPage = styled.div`\n  margin: 0;\n\n  @media only screen and (max-width: ${props => props.theme.mobileSize}) {\n    margin: 200px 25px;\n  }\n\n  .title {\n    margin: 0;\n    font-size: 96px;\n    font-weight: 400;\n\n    @media only screen and (max-width: ${props => props.theme.mobileSize}) {\n      left: 50%;\n      justify-content: center;\n      transform: translate(-50%, 0);\n      top: 125px;\n    }\n  }\n`\n\nconst Container = styled.div`\n  grid-template-columns: repeat(4, 1fr);\n  width: 100%;\n  @media only screen and (max-width: ${props => props.theme.mobileSize}) {\n    display: block;\n  }\n  p {\n    line-height: 1.6;\n  }\n\n  h2 {\n    margin-top: 0;\n  }\n`\n\nconst Body = styled.div`\n  display: flex;\n  flex-direction: column;\n  grid-column: 2 / span 2;\n\n  @media only screen and (max-width: 1280px) {\n    grid-column: 2 / span 3;\n  }\n  p {\n    margin-top: 0;\n  }\n  a {\n    &:hover {\n    }\n  }\n`\n\nconst Page = props => {\n  return (\n    <StyledPage>\n      <Container>\n        <h2 className=\"title\">{props.title}</h2>\n        <Body>{props.children}</Body>\n      </Container>\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\"\nimport Link from \"gatsby-plugin-transition-link/AniLink\"\nimport { useTransition, animated as a } from \"react-spring\"\n\n// this component is each individual image on the grid\n\ntype WorkCardProps = {\n  title: string\n  image: any\n  slug: string\n}\n\nconst Card = styled.div`\n  width: 400px;\n  max-height: 266px;\n  text-overflow: clip;\n  overflow: hidden;\n  white-space: nowrap;\n  img {\n    width: 100%;\n  }\n  p {\n    position: relative;\n    top: -166px;\n    left: -30px;\n    font-size: 96px;\n    color: #eee;\n    margin: 0;\n    padding: 0;\n  }\n`\n\nconst Image = styled(Img)`\n  @media only screen and (max-width: 782px) {\n    height: 300px;\n  }\n`\n\nconst WorkCard = (props: WorkCardProps) => {\n  const { title, slug, image } = props\n  const [showInfo, setShowInfo] = React.useState(false)\n  const transitions = useTransition(showInfo, null, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  })\n  return (\n    <Card>\n      <Link\n        fade\n        to={`/projects/${slug}`}\n        onMouseEnter={() => setShowInfo(true)}\n        onMouseLeave={() => setShowInfo(false)}\n      >\n        <Img\n          fluid={image.childImageSharp.fluid}\n          style={{ maxHeight: \"266px\" }}\n        />\n        {transitions.map(\n          ({ item, props, key }) =>\n            item && (\n              <a.div key={key} style={props}>\n                <p>{title}</p>\n              </a.div>\n            )\n        )}\n      </Link>\n    </Card>\n  )\n}\n\nexport default WorkCard\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport styled from \"styled-components\"\nimport WorkCard from \"./workCard\"\n\n// presentational component for work cards\n\nconst Grid = styled.div`\n  margin-top: 50px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 2rem;\n  justify-content: space-between;\n  background-color: white;\n\n  @media only screen and (max-width: 810px) {\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    grid-auto-rows: 225px;\n  }\n\n  @media only screen and (max-width: 782px) {\n    grid-auto-rows: 300px;\n  }\n\n  @media only screen and (max-width: ${props => props.theme.mobileSize}) {\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  }\n`\n\nconst Works = () => {\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allWorksJson {\n        edges {\n          node {\n            title\n            slug\n            images {\n              childImageSharp {\n                fluid(maxWidth: 1440) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const allWorks = data.allWorksJson.edges\n\n  return (\n    <Grid>\n      {allWorks.map((w: any) => (\n        <WorkCard\n          title={w.node.title}\n          image={w.node.images[0]}\n          slug={w.node.slug}\n          key={w.node.title}\n        />\n      ))}\n    </Grid>\n  )\n}\n\nexport default Works\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport styled from \"styled-components\"\nimport SEO from \"../components/seo\"\nimport StaticPage from \"../components/staticPage\"\nimport Works from \"../components/works\"\n\nconst StyledContact = styled.div`\n  height: 100vh;\n`\n\nconst ProjectsPage = () => {\n  return (\n    <Layout>\n      <SEO title=\"Projects\" />\n      <StaticPage title=\"Projects\">\n        <Works />\n      </StaticPage>\n    </Layout>\n  )\n}\n\nexport default ProjectsPage\n"],"sourceRoot":""}